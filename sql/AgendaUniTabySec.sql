DROP SEQUENCE SEC_ADMINS;
DROP SEQUENCE SEC_CALENDARIOS;
DROP SEQUENCE SEC_CARGOSACADEMICOS;
DROP SEQUENCE SEC_EVENTOS;
DROP SEQUENCE SEC_GRUPOS;
DROP SEQUENCE SEC_INVITACIONES;
DROP SEQUENCE SEC_PERMISOS;
DROP SEQUENCE SEC_USUARIOS;

DROP TABLE USUARIOS CASCADE CONSTRAINTS;
DROP TABLE ADMINS CASCADE CONSTRAINTS;
DROP TABLE CALENDARIOS CASCADE CONSTRAINTS;
DROP TABLE CARGOSACADEMICOS CASCADE CONSTRAINTS;
DROP TABLE EVENTOS CASCADE CONSTRAINTS;
DROP TABLE INVITACIONES CASCADE CONSTRAINTS;
DROP TABLE PERMISOS CASCADE CONSTRAINTS;
DROP TABLE GRUPOS CASCADE CONSTRAINTS;

/*Tables*/

CREATE TABLE USUARIOS (
    OID_U        INTEGER   PRIMARY KEY,       
    NOMBRE        VARCHAR2(256),
    APELLIDOS    VARCHAR2(256),
    TIPOUSUARIO    VARCHAR2(6) CHECK(TIPOUSUARIO IN ('ALUMNO','ADMIN')) ,
    UVUS        VARCHAR2(600)   UNIQUE,
    PASS        VARCHAR2(256)) ;

CREATE TABLE CALENDARIOS (
    OID_C        INTEGER    NOT NULL,
    NOMBRE    VARCHAR2 (256),
    DESCRIPCION    VARCHAR2(2048),
    TIPOCALENDARIO   VARCHAR2(14) CHECK (TIPOCALENDARIO IN('COMPARTIDO','OFICIAL','NOCOMPARTIDO')),
    ESPUBLICO    VARCHAR2(3) CHECK (ESPUBLICO IN ('SI','NO')),
    OID_U        INTEGER    NOT NULL,
PRIMARY KEY(OID_C),
FOREIGN KEY(OID_U) REFERENCES USUARIOS ON DELETE SET NULL);

CREATE TABLE GRUPOS (
    OID_G        INTEGER    NOT NULL,
    NOMBRE     VARCHAR2(256),
    PRIMARY KEY (OID_G)
    );

CREATE TABLE EVENTOS(
    OID_E        INTEGER    NOT NULL,
    NOMBRE    VARCHAR2(256),
    LATITUD    NUMBER(8,6),
  LONGITUD    NUMBER(8,6),    
    FECHA    DATE,
    HORAINICIO    DATE,
    HORAFIN    DATE,
    TIPOEVENTO       VARCHAR2(9) CHECK (TIPOEVENTO IN ('PERIODICO','UNICO')),
    DIACOMPLETO    VARCHAR2(2) CHECK (DIACOMPLETO IN ('SI','NO')),
    DESCRIPCION VARCHAR2(2048),
    OID_U        INTEGER NOT NULL   ,
    OID_C        INTEGER   NOT NULL,
    OID_G     INTEGER,    
PRIMARY KEY (OID_E),
FOREIGN KEY (OID_U) REFERENCES USUARIOS,
FOREIGN KEY (OID_C) REFERENCES CALENDARIOS ON DELETE CASCADE,
FOREIGN KEY (OID_G) REFERENCES GRUPOS ON DELETE SET NULL);

CREATE TABLE INVITACIONES (
    OID_INV    INTEGER    NOT NULL, 
    OID_U        INTEGER    NOT NULL,
    OID_E        INTEGER    NOT NULL,
    INV_ACEPTADA    VARCHAR(2)  DEFAULT 'NO' CHECK(INV_ACEPTADA IN('SI','NO')) ,
PRIMARY KEY(OID_INV),
FOREIGN KEY(OID_U) REFERENCES USUARIOS,
FOREIGN KEY(OID_E) REFERENCES EVENTOS);

CREATE TABLE ADMINS (
    OID_A        INTEGER    NOT NULL,
    OID_U        INTEGER    NOT NULL,
    NOMBRE     VARCHAR2(256),    
PRIMARY KEY(OID_A),
FOREIGN KEY(OID_U) REFERENCES USUARIOS);

CREATE TABLE PERMISOS(
    OID_PERM    INTEGER    NOT NULL,
    OID_U        INTEGER    NOT NULL,
    OID_C        INTEGER    NOT NULL,
TIPOPERMISO     VARCHAR2(10) CHECK (TIPOPERMISO IN('VER','EDITAR','INVITAR')),    
PRIMARY KEY (OID_PERM),
FOREIGN KEY (OID_U) REFERENCES USUARIOS ON DELETE SET NULL,
FOREIGN KEY (OID_C) REFERENCES CALENDARIOS ON DELETE SET NULL);

/*Sequences*/

CREATE SEQUENCE SEC_USUARIOS 
START WITH 1 INCREMENT BY 1 NOMAXVALUE;
CREATE SEQUENCE SEC_CALENDARIOS 
START WITH 1 INCREMENT BY 1 NOMAXVALUE;
CREATE SEQUENCE SEC_GRUPOS 
START WITH 1 INCREMENT BY 1 NOMAXVALUE;
CREATE SEQUENCE SEC_EVENTOS 
START WITH 1 INCREMENT BY 1 NOMAXVALUE;
CREATE SEQUENCE SEC_INVITACIONES 
START WITH 1 INCREMENT BY 1 NOMAXVALUE;
CREATE SEQUENCE SEC_ADMIN
START WITH 1 INCREMENT BY 1 NOMAXVALUE;
CREATE SEQUENCE SEC_PERMISOS 
START WITH 1 INCREMENT BY 1 NOMAXVALUE;

/*Triggers*/
/
CREATE OR REPLACE TRIGGER C_PERSONAL_ADMIN 
BEFORE INSERT ON CALENDARIOS 
REFERENCING NEW AS NEW
FOR EACH ROW
DECLARE 
  TIPO USUARIOS.TIPOUSUARIO%TYPE;
BEGIN
SELECT TIPOUSUARIO INTO TIPO FROM USUARIOS WHERE OID_U = :NEW.OID_U;
IF :NEW.TIPOCALENDARIO != 'OFICIAL' AND (TIPO = 'ADMIN') THEN
    RAISE_APPLICATION_ERROR
      (-20602,'Un usuario tipo ADMIN solo puede crear calendarios tipo OFICIAL');
END IF;
END;
/
CREATE OR REPLACE TRIGGER CREA_CALENDARIO_PARA_EVENTO 
BEFORE INSERT ON EVENTOS 
FOR EACH ROW
BEGIN
  IF :NEW.OID_C = NULL 
  THEN
    CREA_CALENDARIO(:NEW.NOMBRE, :NEW.DESCRIPCION, :NEW.OID_U);
  END IF;
END;
/
CREATE OR REPLACE TRIGGER CREAR_ADMIN_SI_PAS 
AFTER INSERT OR UPDATE OF TIPOUSUARIO ON USUARIOS
FOR EACH ROW
BEGIN
  IF :NEW.TIPOUSUARIO = 'PAS'
  THEN CREA_ADMINS(:NEW.OID_U, :NEW.NOMBRE);
  END IF;
END;
/
CREATE OR REPLACE TRIGGER CREA_OID_ADMINS 
BEFORE INSERT ON ADMINS
FOR EACH ROW
BEGIN
  SELECT SEC_ADMINS.NEXTVAL INTO :NEW.OID_A FROM DUAL;
END;
/
CREATE OR REPLACE TRIGGER CREA_OID_USUARIOS 
BEFORE INSERT ON USUARIOS
FOR EACH ROW
BEGIN
  SELECT SEC_USUARIOS.NEXTVAL INTO :NEW.OID_U FROM DUAL;
END;
/
CREATE OR REPLACE TRIGGER CREA_OID_CALENDARIO 
BEFORE INSERT ON CALENDARIOS
FOR EACH ROW
BEGIN
    SELECT SEC_CALENDARIOS.NEXTVAL INTO :NEW.OID_C FROM DUAL;
END;
/
CREATE OR REPLACE TRIGGER CREA_OID_CALENDARIO 
BEFORE INSERT ON CALENDARIOS
FOR EACH ROW
BEGIN
    SELECT SEC_CALENDARIOS.NEXTVAL INTO :NEW.OID_C FROM DUAL;
END;
/
CREATE OR REPLACE TRIGGER CREA_OID_EVENTO 
BEFORE INSERT ON EVENTOS
FOR EACH ROW
BEGIN
  SELECT SEC_EVENTOS.NEXTVAL INTO :NEW.OID_E FROM DUAL;
END;
/
CREATE OR REPLACE TRIGGER CREA_OID_GRUPO 
BEFORE INSERT ON GRUPOS
FOR EACH ROW
BEGIN
  SELECT SEC_GRUPOS.NEXTVAL INTO :NEW.OID_G FROM DUAL;
END;
/
CREATE OR REPLACE TRIGGER CREA_OID_INVITACION 
BEFORE INSERT ON INVITACIONES
FOR EACH ROW
BEGIN
  SELECT SEC_INVITACIONES.NEXTVAL INTO :NEW.OID_INV FROM DUAL;
END;
/
CREATE OR REPLACE TRIGGER CREA_OID_PERMISO 
BEFORE INSERT ON PERMISOS
FOR EACH ROW
BEGIN
  SELECT SEC_PERMISOS.NEXTVAL INTO :NEW.OID_PERM FROM DUAL;
END;
/
CREATE OR REPLACE TRIGGER EDITAR_CALENDARIO_SIN_PERMISOS 
BEFORE UPDATE ON CALENDARIOS 
FOR EACH ROW
DECLARE
  PERMISO PERMISOS.TIPOPERMISO%TYPE;
BEGIN
  SELECT TIENE_PERMISO(:OLD.OID_U, :OLD.OID_C) INTO PERMISO FROM CALENDARIOS;
  IF PERMISO = 'VER'
    THEN RAISE_APPLICATION_ERROR
      (-20601,'No se puede modificar un calendario sin nivel de permisos editar o invitar');
  END IF;
END;
/

/*Procedures*/

CREATE OR REPLACE PROCEDURE CREA_ADMINS
    (OID_U IN ADMINS.OID_U%TYPE,
    NOMBRE IN ADMINS.NOMBRE%TYPE) AS 
BEGIN
  INSERT INTO ADMINS (OID_U, NOMBRE) 
  VALUES(OID_U, NOMBRE);
END CREA_ADMINS;
/
CREATE OR REPLACE PROCEDURE CREA_CALENDARIO 
    (W_NOMBRE IN CALENDARIOS.NOMBRE%TYPE,
    W_DESCRIPCION IN CALENDARIOS.DESCRIPCION%TYPE,
    W_OID_U IN CALENDARIOS.OID_U%TYPE ) IS 
BEGIN
    INSERT INTO CALENDARIOS(NOMBRE,DESCRIPCION,TIPOCALENDARIO,ESPUBLICO,OID_U)
    VALUES(W_NOMBRE,W_DESCRIPCION,'NOCOMPARTIDO','NO',W_OID_U);
    COMMIT WORK;
END CREA_CALENDARIO;
/
CREATE OR REPLACE PROCEDURE DA_PERMISO 
    (W_OID_U IN USUARIOS.OID_U%TYPE,
    W_OID_C IN CALENDARIOS.OID_C%TYPE,
    PERM IN PERMISOS.TIPOPERMISO%TYPE)  AS 
BEGIN
  INSERT INTO PERMISOS(PERMISOS.OID_C, PERMISOS.OID_U, PERMISOS.TIPOPERMISO) VALUES(W_OID_C, W_OID_U, PERM);
END DA_PERMISO;
/
CREATE OR REPLACE PROCEDURE EVENTOS_CALENDARIO 
    (OID_U IN USUARIOS.OID_U%TYPE,
    OID_C IN CALENDARIOS.OID_C%TYPE) AS
BEGIN
  DECLARE
  CURSOR cu IS
  SELECT NOMBRE, LATITUD, LONGITUD, FECHA, HORAINICIO, HORAFIN, TIPOEVENTO, DIACOMPLETO, DESCRIPCION FROM EVENTOS
  ORDER BY FECHA;
  BEGIN
  FOR fila IN cu LOOP
    SYS.DBMS_OUTPUT.PUT_LINE(fila.NOMBRE||' '||fila.LATITUD||' '||fila.LONGITUD||' '||fila.HORAINICIO||' '
    ||fila.HORAFIN||' '||fila.TIPOEVENTO||' '||fila.DIACOMPLETO||' '||fila.DESCRIPCION);
    END LOOP;
  END;
END EVENTOS_CALENDARIO;
/
CREATE OR REPLACE PROCEDURE FOLLOW_CALENDARIO 
    (W_OID_U IN USUARIOS.OID_U%TYPE,
    W_OID_C IN CALENDARIOS.OID_C%TYPE) AS 
BEGIN
  DECLARE PUB CALENDARIOS.ESPUBLICO%TYPE;
BEGIN
  SELECT CALENDARIOS.ESPUBLICO INTO PUB FROM CALENDARIOS WHERE OID_C = W_OID_C;
  IF PUB = 'SI' THEN
   DA_PERMISO(W_OID_U, W_OID_C, 'VER');
  END IF;
  END;
END FOLLOW_CALENDARIO;
/
CREATE OR REPLACE PROCEDURE INSERTAR_CALENDARIO 
    (W_NOMBRE IN CALENDARIOS.NOMBRE%TYPE,
    W_DESCRIPCION IN CALENDARIOS.DESCRIPCION%TYPE,
    W_TIPOCALENDARIO IN CALENDARIOS.TIPOCALENDARIO%TYPE,
    W_ESPUBLICO IN CALENDARIOS.ESPUBLICO%TYPE,
    W_OID_U IN CALENDARIOS.OID_U%TYPE) AS 
BEGIN
  INSERT INTO CALENDARIOS VALUES(0, W_NOMBRE, W_DESCRIPCION, W_TIPOCALENDARIO, W_ESPUBLICO, W_OID_U);
END INSERTAR_CALENDARIO;
/
CREATE OR REPLACE PROCEDURE INSERTAR_EVENTO 
    (W_NOMBRE IN VARCHAR2,
    W_LATITUD IN VARCHAR2,
    W_LONGITUD IN VARCHAR2,
    W_FECHA IN VARCHAR2,
    W_HORAINICIO IN VARCHAR2,
    W_HORAFIN IN VARCHAR2,
    W_TIPOEVENTO IN VARCHAR2,
    W_DIACOMPLETO IN VARCHAR2,
    W_DESCRIPCION IN VARCHAR2,
    W_OID_U IN VARCHAR2,
    W_OID_C IN VARCHAR2,
    W_OID_G IN VARCHAR2) AS 
BEGIN
  INSERT INTO EVENTOS VALUES(SEC_EVENTOS.nextval, w_nombre, w_latitud, w_longitud, w_fecha, w_horainicio, w_horafin, w_tipoevento,
  w_diacompleto, w_descripcion, w_oid_u, w_oid_c, w_oid_g);
END INSERTAR_EVENTO;
/
CREATE OR REPLACE PROCEDURE INSERTAR_USUARIO 
    (W_NOMBRE IN USUARIOS.NOMBRE%TYPE,
    W_APELLIDOS IN USUARIOS.APELLIDOS%TYPE,
    W_TIPOUSUARIO IN USUARIOS.TIPOUSUARIO%TYPE,
    W_UVUS IN USUARIOS.UVUS%TYPE,
    W_PASS IN USUARIOS.PASS%TYPE) IS
BEGIN
  INSERT INTO USUARIOS (OID_U,NOMBRE,APELLIDOS, TIPOUSUARIO,UVUS,PASS)
  VALUES (SEC_USUARIOS.NEXTVAL, W_NOMBRE, W_APELLIDOS, W_TIPOUSUARIO,W_UVUS, W_PASS);
END INSERTAR_USUARIO;
/
CREATE OR REPLACE PROCEDURE MODIFICAR_EVENTO 
    (W_NOMBRE IN EVENTOS.NOMBRE%TYPE,
    W_LATITUD IN EVENTOS.LATITUD%TYPE,
    W_LONGITUD IN EVENTOS.LONGITUD%TYPE,
    W_FECHA IN EVENTOS.FECHA%TYPE,
    W_HORAINICIO IN EVENTOS.HORAINICIO%TYPE,
    W_HORAFIN IN EVENTOS.HORAFIN%TYPE,
    W_TIPOEVENTO IN EVENTOS.TIPOEVENTO%TYPE,
    W_DIACOMPLETO IN EVENTOS.DIACOMPLETO%TYPE,
    W_DESCRIPCION IN EVENTOS.DESCRIPCION%TYPE,
    W_OID_U IN EVENTOS.OID_U%TYPE,
    W_OID_C IN EVENTOS.OID_C%TYPE) AS
BEGIN
DECLARE
  D_OID_U EVENTOS.OID_U%TYPE;
BEGIN
IF W_OID_U = D_OID_U THEN
  UPDATE EVENTOS SET NOMBRE = W_NOMBRE, LATITUD = W_LATITUD,
  LONGITUD = W_LONGITUD, FECHA = W_FECHA, HORAINICIO = W_HORAINICIO,
  HORAFIN = W_HORAFIN, TIPOEVENTO = W_TIPOEVENTO, DIACOMPLETO = W_DIACOMPLETO, DESCRIPCION = W_DESCRIPCION
  WHERE OID_C = W_OID_C;
END IF;
END;
END MODIFICAR_EVENTO;
/
CREATE OR REPLACE PROCEDURE UNFOLLOW_CALENDARIO 
    (W_OID_C IN CALENDARIOS.OID_C%TYPE,
    W_OID_U IN USUARIOS.OID_U%TYPE) AS 
BEGIN
   DELETE FROM PERMISOS WHERE OID_U = W_OID_U AND OID_C = W_OID_C;
END UNFOLLOW_CALENDARIO;
/

/*Functions*/

CREATE OR REPLACE FUNCTION CONTAR_EVENTOS 
    (W_OID_C IN EVENTOS.OID_C%TYPE)
    RETURN NUMBER IS W_CUENTA_EVENTOS EVENTOS.OID_C%TYPE;
BEGIN
    SELECT COUNT(*) INTO W_CUENTA_EVENTOS FROM EVENTOS
        WHERE OID_C=W_OID_C;
    RETURN (W_CUENTA_EVENTOS);
END;
/
CREATE OR REPLACE FUNCTION NUM_CALENDARIOS 
    (W_OID_U IN USUARIOS.OID_U%TYPE) 
    RETURN NUMBER IS NUM INTEGER; 
BEGIN
  SELECT COUNT(*) INTO NUM FROM CALENDARIOS
  WHERE OID_U = W_OID_U;
  RETURN (NUM);
END NUM_CALENDARIOS;
/
CREATE OR REPLACE FUNCTION TIENE_PERMISO 
    (W_OID_U IN USUARIOS.OID_U%TYPE,
    W_OID_C IN CALENDARIOS.OID_C%TYPE) 
    RETURN VARCHAR2 AS PERMISO PERMISOS.TIPOPERMISO%TYPE;
BEGIN
  DECLARE PERM PERMISOS.TIPOPERMISO%TYPE;
BEGIN
  SELECT TIPOPERMISO INTO PERM FROM PERMISOS WHERE OID_C = W_OID_C AND OID_U = W_OID_U;
  RETURN PERM;
  END;
END TIENE_PERMISO;